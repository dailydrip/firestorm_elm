-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Firestorm.Query exposing (CategoriesOptionalArguments, CategoryRequiredArguments, ThreadRequiredArguments, categories, category, thread)

import Firestorm.InputObject
import Firestorm.Interface
import Firestorm.Object
import Firestorm.Scalar
import Firestorm.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CategoriesOptionalArguments =
    { pagination : OptionalArgument Firestorm.InputObject.Pagination }


{-| Get all categories
-}
categories : (CategoriesOptionalArguments -> CategoriesOptionalArguments) -> SelectionSet decodesTo Firestorm.Object.PaginatedCategories -> SelectionSet decodesTo RootQuery
categories fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { pagination = Absent }

        optionalArgs =
            [ Argument.optional "pagination" filledInOptionals.pagination Firestorm.InputObject.encodePagination ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "categories" optionalArgs object_ identity


type alias CategoryRequiredArguments =
    { id : Firestorm.Scalar.Id }


{-| Get a specific category
-}
category : CategoryRequiredArguments -> SelectionSet decodesTo Firestorm.Object.Category -> SelectionSet decodesTo RootQuery
category requiredArgs object_ =
    Object.selectionForCompositeField "category" [ Argument.required "id" requiredArgs.id (\(Firestorm.Scalar.Id raw) -> Encode.string raw) ] object_ identity


type alias ThreadRequiredArguments =
    { id : Firestorm.Scalar.Id }


{-| Get a specific thread
-}
thread : ThreadRequiredArguments -> SelectionSet decodesTo Firestorm.Object.Thread -> SelectionSet decodesTo RootQuery
thread requiredArgs object_ =
    Object.selectionForCompositeField "thread" [ Argument.required "id" requiredArgs.id (\(Firestorm.Scalar.Id raw) -> Encode.string raw) ] object_ identity
