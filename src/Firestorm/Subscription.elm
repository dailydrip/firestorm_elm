-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Firestorm.Subscription exposing (PostAddedRequiredArguments, ThreadAddedRequiredArguments, categoryAdded, postAdded, threadAdded)

import Firestorm.InputObject
import Firestorm.Interface
import Firestorm.Object
import Firestorm.Scalar
import Firestorm.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


{-| Get notified when a category is added
-}
categoryAdded : SelectionSet decodesTo Firestorm.Object.Category -> SelectionSet decodesTo RootSubscription
categoryAdded object_ =
    Object.selectionForCompositeField "categoryAdded" [] object_ identity


type alias PostAddedRequiredArguments =
    { threadId : Firestorm.Scalar.Id }


{-| Get notified when a post is added
-}
postAdded : PostAddedRequiredArguments -> SelectionSet decodesTo Firestorm.Object.Post -> SelectionSet decodesTo RootSubscription
postAdded requiredArgs object_ =
    Object.selectionForCompositeField "postAdded" [ Argument.required "threadId" requiredArgs.threadId (\(Firestorm.Scalar.Id raw) -> Encode.string raw) ] object_ identity


type alias ThreadAddedRequiredArguments =
    { categoryId : Firestorm.Scalar.Id }


{-| Get notified when a thread is added
-}
threadAdded : ThreadAddedRequiredArguments -> SelectionSet decodesTo Firestorm.Object.Thread -> SelectionSet decodesTo RootSubscription
threadAdded requiredArgs object_ =
    Object.selectionForCompositeField "threadAdded" [ Argument.required "categoryId" requiredArgs.categoryId (\(Firestorm.Scalar.Id raw) -> Encode.string raw) ] object_ identity
